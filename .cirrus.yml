build_and_store_wheels: &BUILD_AND_STORE_WHEELS
  install_cibuildwheel_script:
    - python -m pip install cibuildwheel==2.16.2
  run_cibuildwheel_script:
    - cibuildwheel
  wheels_artifacts:
    path: "wheelhouse/*"

env:
  VCPKG_INSTALLED_DIR: /tmp/vcpkg_installed
  CIBW_BUILD_FRONTEND: build
  CIBW_BEFORE_ALL_LINUX: yum install -y zip flex bison gcc-gfortran
  CIBW_MANYLINUX_AARCH64_IMAGE: quay.io/pypa/manylinux_2_28_aarch64
  CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
    auditwheel repair -w {dest_dir} {wheel}
    --exclude libarrow_python.so
    --exclude libarrow.so.1400
  # There's no python-casacore wheel for amd64-linux or macosx
  # CIBW_TEST_EXTRAS: test
  # CIBW_TEST_COMMAND: py.test -s -vvv --pyargs arcae

linux_aarch64_task:
  name: Build linux amd64 ${PYTHON_VERSION_NAME} manylinux_2_28 wheel
  compute_engine_instance:
    image_project: cirrus-images
    image: family/docker-builder-arm64
    architecture: arm64
    platform: linux
    cpu: 2
    memory: 4G

  install_pre_requirements_script:
    - apt install -y python3-venv python-is-python3
  <<: *BUILD_AND_STORE_WHEELS

  matrix:
    - env:
        PYTHON_VERSION_NAME: python 3.9
        CIBW_BUILD: cp39-manylinux*
    - env:
        PYTHON_VERSION_NAME: python 3.10
        CIBW_BUILD: cp310-manylinux*
    - env:
        PYTHON_VERSION_NAME: python 3.11
        CIBW_BUILD: cp311-manylinux*
    - env:
        PYTHON_VERSION_NAME: python 3.12
        CIBW_BUILD: cp312-manylinux*
  env:
    # Run the container in host mode so that vcpkg has access to the Cirrus CI cache
    CIBW_CONTAINER_ENGINE: "docker; create_args: --network=host"
    VCPKG_TARGET_TRIPLET: arm64-linux-dynamic-cxx17-abi1-rel
    CIBW_ENVIRONMENT_LINUX: >
      CMAKE_ARGS=-DBUILD_TESTING=OFF
      VCPKG_BINARY_SOURCES="clear;http,http://127.0.0.1:12321/{name}/{version}/{sha},readwrite"
      VCPKG_INSTALLED_DIR=$VCPKG_INSTALLED_DIR
      VCPKG_FORCE_SYSTEM_BINARIES=1
      VCPKG_TARGET_TRIPLET=$VCPKG_TARGET_TRIPLET
      LD_LIBRARY_PATH=$VCPKG_INSTALLED_DIR/$VCPKG_TARGET_TRIPLET/lib

macos_arm64_task:
  name: Build macOS arm64 ${PYTHON_VERSION_NAME} wheels.
  macos_instance:
    image: ghcr.io/cirruslabs/macos-sonoma-xcode

  matrix:
    - env:
        PYTHON_VERSION_NAME: python 3.9
        CIBW_BUILD: cp39-*
    # - env:
    #     PYTHON_VERSION_NAME: python 3.10
    #     CIBW_BUILD: cp310-*
    # - env:
    #     PYTHON_VERSION_NAME: python 3.11
    #     CIBW_BUILD: cp311-*
    # - env:
    #     PYTHON_VERSION_NAME: python 3.12
    #     CIBW_BUILD: cp312-*

  env:
    VCPKG_TARGET_TRIPLET: arm64-osx-dynamic-cxx17-abi1-rel
    REPAIR_LIBRARY_PATH: $VCPKG_INSTALLED_DIR/$VCPKG_TARGET_TRIPLET/lib
    CIBW_REPAIR_WHEEL_COMMAND_MACOS:
      tree /tmp/vcpkg_installed/arm64-osx-dynamic-cxx17-abi1-rel &&
      DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} &&
      DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel
      --require-archs {delocate_archs}
      -w {dest_dir}
      -v {wheel}
      --exclude libarrow_python.dylib
      --exclude libarrow.1400.dylib
    CIBW_ENVIRONMENT_MACOS: >
      CMAKE_ARGS=-DBUILD_TESTING=OFF
      VCPKG_BINARY_SOURCES="clear;http,http://127.0.0.1:12321/{name}/{version}/{sha},readwrite"
      VCPKG_INSTALLED_DIR=$VCPKG_INSTALLED_DIR
      VCPKG_TARGET_TRIPLET=$VCPKG_TARGET_TRIPLET
      REPAIR_LIBRARY_PATH=$REPAIR_LIBRARY_PATH
      MACOSX_DEPLOYMENT_TARGET=11.0

  install_pre_requirements_script: |
    brew install llvm python tree
    python3 -m pip install --upgrade pip
    python3 -m pip install --upgrade pip install git+https://github.com/pypa/cibuildwheel@main
  run_cibuildwheel_script: |
    export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
    export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
    export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
    echo "CIBW_ENVIRONMENT_MACOS=$CIBW_ENVIRONMENT_MACOS"
    cibuildwheel
  wheels_artifacts:
    path: "wheelhouse/*"