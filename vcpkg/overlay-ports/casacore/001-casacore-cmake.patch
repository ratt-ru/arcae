diff --git a/CMakeLists.txt b/CMakeLists.txt
index 62c340407..8f151f2a0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -354,11 +354,6 @@ endif (_usebison STREQUAL YES)
 if (_uselapack STREQUAL YES)
     find_package (BLAS REQUIRED)
     find_package (LAPACK REQUIRED)
-    if (FFTW3_DISABLE_THREADS)
-        find_package (FFTW3 COMPONENTS single double REQUIRED)
-    else()
-        find_package (FFTW3 COMPONENTS single double threads REQUIRED)
-    endif (FFTW3_DISABLE_THREADS)
 endif (_uselapack STREQUAL YES)
 if (_usefits STREQUAL YES)
     find_package (CFITSIO 3.030 REQUIRED) # Should pad to three decimal digits
@@ -400,11 +395,15 @@ if (HDF5_FOUND)
     add_definitions(-DHAVE_HDF5)
 endif (HDF5_FOUND)
 
-include_directories (${FFTW3_INCLUDE_DIRS})
-add_definitions(-DHAVE_FFTW3)
-if (NOT FFTW3_DISABLE_THREADS)
-    add_definitions(-DHAVE_FFTW3_THREADS)
-endif (NOT FFTW3_DISABLE_THREADS)
+if (BUILD_FFTW3)
+    include_directories (${FFTW3_INCLUDE_DIRS})
+    add_definitions(-DHAVE_FFTW3)
+    if (NOT FFTW3_DISABLE_THREADS)
+        add_definitions(-DHAVE_FFTW3_THREADS)
+    endif (NOT FFTW3_DISABLE_THREADS)
+else()
+    remove_definitions((-DHAVE_FFTW3 -DHAVE_FFTW3_THREADS))
+endif (BUILD_FFTW3)
 
 if (DL_FOUND)
     add_definitions(-DHAVE_DL)
@@ -557,8 +556,41 @@ endforeach (module)
 
 # Install pkg-config support file
 CONFIGURE_FILE("casacore.pc.in" "casacore.pc" @ONLY)
-set(CASA_PKGCONFIG_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
-INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/casacore.pc" DESTINATION "${CASA_PKGCONFIG_INSTALL_PREFIX}")
+# set(CASA_PKGCONFIG_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
+# INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/casacore.pc" DESTINATION "${CASA_PKGCONFIG_INSTALL_PREFIX}")
+INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/casacore.pc" DESTINATION lib/pkgconfig)
+
+# generate and install export file
+install(EXPORT casacore
+    FILE "${PROJECT_NAME}Targets.cmake"
+    NAMESPACE ${namespace}::
+    DESTINATION cmake
+)
+
+include(CMakePackageConfigHelpers)
+
+# generate the version file for the config file
+write_basic_package_version_file(
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
+    VERSION "${version}"
+    COMPATIBILITY AnyNewerVersion
+)
+# create config file
+configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    INSTALL_DESTINATION cmake
+)
+# install config files
+install(FILES
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
+    DESTINATION cmake
+)
+# generate the export targets for the build tree
+export(EXPORT casacore
+    FILE "${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}Targets.cmake"
+    NAMESPACE ${namespace}::
+)
 
 # Show summary.
 message (STATUS "CMAKE_SYSTEM .......... = ${CMAKE_SYSTEM}")
diff --git a/Config.cmake.in b/Config.cmake.in
new file mode 100644
index 000000000..8c9ad12aa
--- /dev/null
+++ b/Config.cmake.in
@@ -0,0 +1,5 @@
+@PACKAGE_INIT@
+
+include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
+
+check_required_components(@PROJECT_NAME@)
diff --git a/casa/CMakeLists.txt b/casa/CMakeLists.txt
index 950752c6a..d4c35cb69 100644
--- a/casa/CMakeLists.txt
+++ b/casa/CMakeLists.txt
@@ -15,7 +15,9 @@ set (
 parser_inputs
 JsonGram
 )
- 
+
+find_package(ZLIB REQUIRED)
+
 foreach (src ${parser_inputs})
     if (BISON_VERSION VERSION_LESS 3.0)
         BISON_TARGET (${src} Json/${src}.yy ${CMAKE_CURRENT_BINARY_DIR}/${src}.ycc COMPILE_FLAGS "-y -p ${src}")
@@ -291,16 +293,18 @@ find_library(libm m)
 
 target_link_libraries (
 casa_casa
+PUBLIC
 ${de_libraries}
 ${libm}
 dl
 ${CASACORE_ARCH_LIBS}
+PRIVATE
+ZLIB::ZLIB
 )
 
-add_subdirectory (apps)
-
 install (
 TARGETS casa_casa
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/casa/Exceptions/Error.h b/casa/Exceptions/Error.h
index 12229f902..a15e5080b 100644
--- a/casa/Exceptions/Error.h
+++ b/casa/Exceptions/Error.h
@@ -91,7 +91,7 @@ namespace casacore { //# NAMESPACE CASACORE - BEGIN
 #define ThrowIfError(c,m) {if (AIPS_UNLIKELY(c)) {casacore::AipsError::throwIfError (casacore::True, (m), __FILE__, __LINE__, __PRETTY_FUNCTION__);}}
 
 // Repackage and rethrow an AipsError exception.
-#define Rethrow(e,m) {throw casacore::AipsError::repackageAipsError ((e),(m),__FILE__,__LINE__, __PRETTY_FUNCTION__);}
+// #define Rethrow(e,m) {throw casacore::AipsError::repackageAipsError ((e),(m),__FILE__,__LINE__, __PRETTY_FUNCTION__);}
 
 
 // <summary>Base class for all Casacore library errors</summary>
diff --git a/casa/Json/JsonOut.h b/casa/Json/JsonOut.h
index b5229c57d..66596d273 100644
--- a/casa/Json/JsonOut.h
+++ b/casa/Json/JsonOut.h
@@ -103,7 +103,7 @@ namespace casacore { //# NAMESPACE CASACORE - BEGIN
   // </motivation>
   //
   //# <todo asof="1996/03/10">
-  //#   <li> 
+  //#   <li>
   //# </todo>
 
   class JsonOut
@@ -174,6 +174,10 @@ namespace casacore { //# NAMESPACE CASACORE - BEGIN
     void put (const DComplex& value);
     void put (const char* value);
     void put (const String& value);
+    // Put a Record which is written as a {} structure.
+    // The Record can be nested.
+    void put (const Record&);
+
     // </group>
 
     // Put a line defining an array value. Multi-dim arrays are written as
@@ -215,10 +219,6 @@ namespace casacore { //# NAMESPACE CASACORE - BEGIN
     // Write a key and valueholder.
     void writeKV (const String& name, const ValueHolder& vh);
 
-    // Put a Record which is written as a {} structure.
-    // The Record can be nested.
-    void put (const Record&);
-
     // Get the indentation after a name.
     // It indents with the length of the name (including quotes and colon)
     // with a maximum of 20 spaces.
diff --git a/cmake/FindFFTW3.cmake b/cmake/FindFFTW3.cmake
index 886f3bebb..66d117674 100644
--- a/cmake/FindFFTW3.cmake
+++ b/cmake/FindFFTW3.cmake
@@ -58,15 +58,6 @@ foreach(_comp ${_components})
   endif(_comp STREQUAL "single")
 endforeach(_comp ${_components})
 
-# If using threads, we need to link against threaded libraries as well.
-if(_use_threads)
-  set(_thread_libs)
-  foreach(_lib ${_libraries})
-    list(APPEND _thread_libs ${_lib}_threads)
-  endforeach(_lib ${_libraries})
-  set(_libraries ${_thread_libs} ${_libraries})
-endif(_use_threads)
-
 # Keep a list of variable names that we need to pass on to
 # find_package_handle_standard_args().
 set(_check_list)
diff --git a/coordinates/CMakeLists.txt b/coordinates/CMakeLists.txt
index 783ac1d45..5871327d3 100644
--- a/coordinates/CMakeLists.txt
+++ b/coordinates/CMakeLists.txt
@@ -31,6 +31,7 @@ init_pch_support(casa_coordinates ${top_level_headers})
 target_link_libraries (casa_coordinates casa_fits ${WCSLIB_LIBRARIES} ${CASACORE_ARCH_LIBS})
 
 install (TARGETS casa_coordinates
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/derivedmscal/CMakeLists.txt b/derivedmscal/CMakeLists.txt
index ff8da2a3e..232e5b93f 100644
--- a/derivedmscal/CMakeLists.txt
+++ b/derivedmscal/CMakeLists.txt
@@ -19,6 +19,7 @@ init_pch_support(casa_derivedmscal ${top_level_headers})
 target_link_libraries (casa_derivedmscal casa_ms ${CASACORE_ARCH_LIBS})
 
 install (TARGETS casa_derivedmscal
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/fits/CMakeLists.txt b/fits/CMakeLists.txt
index 65b888eec..b70f532a3 100644
--- a/fits/CMakeLists.txt
+++ b/fits/CMakeLists.txt
@@ -30,7 +30,11 @@ FITS.h
 
 init_pch_support(casa_fits ${top_level_headers})
 
-target_link_libraries (casa_fits casa_measures ${CFITSIO_LIBRARIES} ${CASACORE_ARCH_LIBS})
+find_package(ZLIB REQUIRED)
+
+target_link_libraries (casa_fits
+    PUBLIC casa_measures ${CFITSIO_LIBRARIES} ${CASACORE_ARCH_LIBS}
+    PRIVATE ZLIB::ZLIB)
 
 add_subdirectory (apps)
 
@@ -38,6 +42,7 @@ add_subdirectory (apps)
 add_subdirectory (FITS/test ${EXCL_ALL})
 
 install (TARGETS casa_fits
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/fits/apps/CMakeLists.txt b/fits/apps/CMakeLists.txt
index b2e422000..45dde2e82 100644
--- a/fits/apps/CMakeLists.txt
+++ b/fits/apps/CMakeLists.txt
@@ -1,4 +1,5 @@
+find_package(ZLIB REQUIRED)
 add_executable (fits2table  fits2table/fits2table.cc)
 add_pch_support(fits2table)
-target_link_libraries (fits2table casa_fits ${CASACORE_ARCH_LIBS})
+target_link_libraries (fits2table PUBLIC casa_fits ${CASACORE_ARCH_LIBS} PRIVATE ZLIB::ZLIB)
 install(TARGETS fits2table)
diff --git a/images/CMakeLists.txt b/images/CMakeLists.txt
index 20f5d0ac4..45258eb68 100644
--- a/images/CMakeLists.txt
+++ b/images/CMakeLists.txt
@@ -82,6 +82,7 @@ add_subdirectory (apps)
 
 install (
 TARGETS casa_images
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/lattices/CMakeLists.txt b/lattices/CMakeLists.txt
index dccca16d5..29465d734 100644
--- a/lattices/CMakeLists.txt
+++ b/lattices/CMakeLists.txt
@@ -77,6 +77,7 @@ ${CASACORE_ARCH_LIBS}
 )
 
 install (TARGETS casa_lattices
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/meas/CMakeLists.txt b/meas/CMakeLists.txt
index a2c9d5639..d3b5b6591 100644
--- a/meas/CMakeLists.txt
+++ b/meas/CMakeLists.txt
@@ -30,6 +30,7 @@ init_pch_support(casa_meas ${top_level_headers})
 target_link_libraries (casa_meas casa_measures)
 
 install (TARGETS casa_meas
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/measures/CMakeLists.txt b/measures/CMakeLists.txt
index 6b2e42b85..ec522eeb4 100644
--- a/measures/CMakeLists.txt
+++ b/measures/CMakeLists.txt
@@ -82,6 +82,7 @@ add_subdirectory (apps)
 
 install (
 TARGETS casa_measures
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/mirlib/CMakeLists.txt b/mirlib/CMakeLists.txt
index 0703a5d1d..46f26840f 100644
--- a/mirlib/CMakeLists.txt
+++ b/mirlib/CMakeLists.txt
@@ -22,6 +22,7 @@ target_link_libraries (casa_mirlib casa_casa ${CASACORE_ARCH_LIBS})
 
 install (
 TARGETS casa_mirlib
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/ms/CMakeLists.txt b/ms/CMakeLists.txt
index 5602283c3..0219de46b 100644
--- a/ms/CMakeLists.txt
+++ b/ms/CMakeLists.txt
@@ -1,5 +1,5 @@
 #
-# CASA MeasurementSets 
+# CASA MeasurementSets
 #
 
 set (
@@ -176,6 +176,7 @@ ${CASACORE_ARCH_LIBS}
 add_subdirectory (apps)
 
 install (TARGETS casa_ms
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/msfits/CMakeLists.txt b/msfits/CMakeLists.txt
index b8340e009..2acad1bb7 100644
--- a/msfits/CMakeLists.txt
+++ b/msfits/CMakeLists.txt
@@ -36,6 +36,7 @@ add_subdirectory (apps)
 
 install (
 TARGETS casa_msfits
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/python/CMakeLists-cmake3.14.txt b/python/CMakeLists-cmake3.14.txt
index 7c981f734..1ce6b4d6c 100644
--- a/python/CMakeLists-cmake3.14.txt
+++ b/python/CMakeLists-cmake3.14.txt
@@ -63,6 +63,7 @@ Converters/PycArray.tcc
 target_link_libraries (casa_python casa_casa ${PYTHON2_Boost_LIBRARIES} ${PYTHON2_LIBRARIES} ${CASACORE_ARCH_LIBS})
 
 install (TARGETS casa_python
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/python/CMakeLists-older-cmake.txt b/python/CMakeLists-older-cmake.txt
index 96411e7d9..e145da3bb 100644
--- a/python/CMakeLists-older-cmake.txt
+++ b/python/CMakeLists-older-cmake.txt
@@ -90,6 +90,7 @@ Converters/PycArray.tcc
 target_link_libraries (casa_python casa_casa ${PYTHON2_Boost_LIBRARIES} ${PYTHON2_LIBRARIES} ${CASACORE_ARCH_LIBS})
 
 install (TARGETS casa_python
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/python3/CMakeLists-cmake3.14.txt b/python3/CMakeLists-cmake3.14.txt
index 921c4c30c..e5746d119 100644
--- a/python3/CMakeLists-cmake3.14.txt
+++ b/python3/CMakeLists-cmake3.14.txt
@@ -54,6 +54,7 @@ add_library (casa_python3
 target_link_libraries (casa_python3 casa_casa ${PYTHON3_Boost_LIBRARIES} ${PYTHON3_LIBRARIES})
 
 install (TARGETS casa_python3
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/python3/CMakeLists-older-cmake.txt b/python3/CMakeLists-older-cmake.txt
index 8a42cc905..5fe0999ca 100644
--- a/python3/CMakeLists-older-cmake.txt
+++ b/python3/CMakeLists-older-cmake.txt
@@ -84,6 +84,7 @@ add_library (casa_python3
 target_link_libraries (casa_python3 casa_casa ${PYTHON3_Boost_LIBRARIES} ${PYTHON3_LIBRARIES})
 
 install (TARGETS casa_python3
+EXPORT casacore
 RUNTIME DESTINATION bin
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
diff --git a/scimath/CMakeLists.txt b/scimath/CMakeLists.txt
index b7f2900f1..999981164 100644
--- a/scimath/CMakeLists.txt
+++ b/scimath/CMakeLists.txt
@@ -62,6 +62,7 @@ else (FFTW3_FOUND)
 endif (FFTW3_FOUND)
 
 install (TARGETS casa_scimath
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/scimath_f/CMakeLists.txt b/scimath_f/CMakeLists.txt
index 69bd4d757..8e6aa8d8a 100644
--- a/scimath_f/CMakeLists.txt
+++ b/scimath_f/CMakeLists.txt
@@ -50,6 +50,7 @@ target_link_libraries (casa_scimath_f casa_tables ${LAPACK_LIBRARIES} ${BLAS_LIB
 
 install (
 TARGETS casa_scimath_f
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/tables/CMakeLists.txt b/tables/CMakeLists.txt
index 31cf24353..92a2f33ce 100644
--- a/tables/CMakeLists.txt
+++ b/tables/CMakeLists.txt
@@ -241,11 +241,18 @@ TaQL.h
 
 init_pch_support(casa_tables ${top_level_headers})
 
-target_link_libraries (casa_tables casa_casa ${CASACORE_ARCH_LIBS} ${DYSCOSTMAN_LIBRARIES} ${CASACORE_ADIOS_LIBRARY} ${CASACORE_MPI_LIBRARY})
+target_link_libraries (casa_tables casa_casa ${CASACORE_ARCH_LIBS} ${DYSCOSTMAN_LIBRARIES})
+if(MPI_FOUND)
+  target_link_libraries(casa_tables ${CASACORE_MPI_LIBRARY})
+  if(ADIOS2_FOUND)
+    target_link_libraries(casa_tables adios2::adios2)
+  endif(ADIOS2_FOUND)
+endif(MPI_FOUND)
 
 add_subdirectory (apps)
 
 install (TARGETS casa_tables
+EXPORT casacore
 LIBRARY DESTINATION lib${LIB_SUFFIX}
 ARCHIVE DESTINATION lib${LIB_SUFFIX}
 LIBRARY PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff --git a/tables/Tables/PlainTable.cc b/tables/Tables/PlainTable.cc
index 2a41c4f62..fb088a3c5 100644
--- a/tables/Tables/PlainTable.cc
+++ b/tables/Tables/PlainTable.cc
@@ -45,7 +45,7 @@
 namespace casacore { //# NAMESPACE CASACORE - BEGIN
 
 //# Initialize the static TableCache object.
-TableCache PlainTable::theirTableCache;
+thread_local TableCache PlainTable::theirTableCache;
 
 PlainTable::PlainTable (SetupNewTable& newtab, rownr_t nrrow, Bool initialize,
                         const TableLock& lockOptions, int endianFormat,
diff --git a/tables/Tables/PlainTable.h b/tables/Tables/PlainTable.h
index 3179d8eb6..c0a0ee406 100644
--- a/tables/Tables/PlainTable.h
+++ b/tables/Tables/PlainTable.h
@@ -312,7 +312,7 @@ private:
                                        //# False = little endian canonical
     TSMOption      tsmOption_p;
     //# cache of open (plain) tables
-    static TableCache theirTableCache;
+    static thread_local TableCache theirTableCache;
 };
 
 
diff --git a/tables/Tables/RefRows.cc b/tables/Tables/RefRows.cc
index 957b3e1b0..f80a977b7 100644
--- a/tables/Tables/RefRows.cc
+++ b/tables/Tables/RefRows.cc
@@ -38,17 +38,24 @@ RefRows::RefRows (const Vector<rownr_t>& rowNumbers, Bool isSliced,
   init (rowNumbers, isSliced, collapse);
 }
 
+RefRows::RefRows (Vector<rownr_t>&& rowNumbers, Bool isSliced,
+		  Bool collapse)
+{
+  init (std::move(rowNumbers), isSliced, collapse);
+}
+
+
 RefRows::RefRows (const Vector<uInt>& rowNumbers, Bool isSliced,
 		  Bool collapse)
 {
   init (RowNumbers(rowNumbers), isSliced, collapse);
 }
-  
-void RefRows::init (const Vector<rownr_t>& rowNumbers, Bool isSliced,
+
+void RefRows::init (Vector<rownr_t> rowNumbers, Bool isSliced,
                     Bool collapse)
 {
-  itsRows   = rowNumbers;
-  itsNrows  = rowNumbers.nelements();
+  itsRows   = std::move(rowNumbers);
+  itsNrows  = itsRows.nelements();
   itsSliced = isSliced;
     if (itsSliced) {
 	AlwaysAssert (itsNrows%3 == 0, AipsError);
diff --git a/tables/Tables/RefRows.h b/tables/Tables/RefRows.h
index 32ab695fc..ef2dff8db 100644
--- a/tables/Tables/RefRows.h
+++ b/tables/Tables/RefRows.h
@@ -50,12 +50,12 @@ class Slicer;
 //   <li> <linkto class=Vector>Vector</linkto>
 // </prerequisite>
 
-// <synopsis> 
+// <synopsis>
 // RefRows is used to hold the row numbers forming a view on another
 // table. It contains a vector which can hold the row numbers in 2 ways:
 // <ol>
 // <li> As a normal series of row numbers. This is used by e.g. class
-//  <linkto class=RefTable>RefTable</linkto> 
+//  <linkto class=RefTable>RefTable</linkto>
 // <li> As a series of Slices. In this case 3 subsequent entries
 //  in the vector are used to represent start, end, and increment.
 //  This is used by a function like <src>ScalarColumn::getColumnRange</src>.
@@ -92,6 +92,9 @@ public:
     // individual row numbers to the slice form (to save memory).
     RefRows (const Vector<rownr_t>& rowNumbers, Bool isSliced = False,
              Bool collapse = False);
+
+    RefRows (Vector<rownr_t>&& rowNumbers, Bool isSliced = False,
+             Bool collapse = False);
 #ifdef IMPLICIT_CTDS_32BIT
     RefRows (const Vector<uInt>& rowNumbers, Bool isSliced = False,
              Bool collapse = False);
@@ -148,7 +151,7 @@ public:
 
 private:
     // Initialize the object.
-    void init (const Vector<rownr_t>& rowNumbers, Bool isSliced,
+    void init (Vector<rownr_t> rowNumbers, Bool isSliced,
                Bool collapse);
 
     // Fill the itsNrows variable.
@@ -175,7 +178,7 @@ private:
 //   <li> <linkto class=RefRows>RefRows</linkto>
 // </prerequisite>
 
-// <synopsis> 
+// <synopsis>
 // RefRowsSliceIter is useful to iterate through a
 // <linkto class=RefRows>RefRows</linkto> object,
 // especially if the RefRows object contains slices.
diff --git a/tables/Tables/TableProxy.cc b/tables/Tables/TableProxy.cc
index f65cf26dd..75268a528 100644
--- a/tables/Tables/TableProxy.cc
+++ b/tables/Tables/TableProxy.cc
@@ -97,7 +97,7 @@ TableProxy::TableProxy (const String& tableName,
   if (nrow < 0) {
     nrow = 0;
   }
-  
+
   TableDesc tabdesc;
   String message;
   if (!makeTableDesc (tableDesc, tabdesc, message)) {
@@ -111,7 +111,7 @@ TableProxy::TableProxy (const String& tableName,
 }
 
 TableProxy::TableProxy (const Vector<String>& tableNames,
-			const Vector<String>& concatenateSubTableNames, 
+			const Vector<String>& concatenateSubTableNames,
 			const Record& lockOptions,
 			int option)
 {
@@ -128,7 +128,7 @@ TableProxy::TableProxy (const Vector<String>& tableNames,
 	     subNames.begin());
   table_p = Table (tabs, subNames);
 }
- 
+
 TableProxy::TableProxy (const std::vector<TableProxy>& tables,
 			const Vector<String>& concatenateSubTableNames,
 			int, int, int)
@@ -271,6 +271,9 @@ Record TableProxy::lockOptions()
       option = "autonoread";
     }
     break;
+  case TableLock::NoLocking:
+    option = "nolock";
+    break;
   default:
     option = "unknown";
   }
@@ -285,9 +288,9 @@ Bool TableProxy::isMultiUsed (Bool checkSubTables)
   return table_p.isMultiUsed (checkSubTables);
 }
 
-String TableProxy::toAscii (const String& asciiFile, 
-                            const String& headerFile, 
-                            const Vector<String>& columns, 
+String TableProxy::toAscii (const String& asciiFile,
+                            const String& headerFile,
+                            const Vector<String>& columns,
                             const String& sep,
                             const Vector<Int>& precision,
                             Bool useBrackets)
@@ -313,7 +316,7 @@ String TableProxy::toAscii (const String& asciiFile,
   for (Int j=0; j<ncols; j++) {
     col_is_good[j] = getColInfo (colNames[j], useBrackets,
                                  col_type[j], message);
-    // Remember last good column 
+    // Remember last good column
     if (col_is_good[j]) {
       last_good_col = j;
     }
@@ -931,7 +934,7 @@ Record TableProxy::getTableDesc(const TableDesc & tabdesc, Bool cOrder)
       rec.defineRecord (columnDescription.name(),
                 recordColumnDesc (columnDescription, cOrder));
     }
-    
+
     // Convert hypercolumns
     rec.defineRecord ("_define_hypercolumn_",
         recordHCDesc (tabdesc));
@@ -1172,7 +1175,7 @@ Record TableProxy::getVarColumn (const String& columnName,
   char namebuf[22];
   for (Int64 i=0; i<nrows; i++) {
     // Add the result to the record with field name formed from 1-based rownr.
-    snprintf (namebuf, sizeof(namebuf), "r%lli", row+1);
+    sprintf (namebuf, "r%lli", row+1);
     if (tabcol.isDefined(row)) {
       getValueFromTable(columnName, row, 1, 1, False).toRecord (rec, namebuf);
     } else {
@@ -2158,7 +2161,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
   }
   if (isScalar) {
     switch (dtype) {
-    case TpBool: 
+    case TpBool:
       {
 	ScalarColumn<Bool> ac(table_p,colName);
 	if (isCell) {
@@ -2170,7 +2173,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpUChar:
       {
-	ScalarColumn<uChar> ac(table_p,colName); 
+	ScalarColumn<uChar> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2180,7 +2183,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpShort:
       {
-	ScalarColumn<Short> ac(table_p,colName); 
+	ScalarColumn<Short> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2190,7 +2193,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpUShort:
       {
-	ScalarColumn<uShort> ac(table_p,colName); 
+	ScalarColumn<uShort> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2200,17 +2203,17 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpInt:
       {
-	ScalarColumn<Int> ac(table_p,colName); 
+	ScalarColumn<Int> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
-	}else{ 
+	}else{
 	  return ValueHolder (ac.getColumnRange(Slice(rownr, nrow, incr)));
 	}
       }
       break;
     case TpUInt:
       {
-	ScalarColumn<uInt> ac(table_p,colName); 
+	ScalarColumn<uInt> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2220,17 +2223,17 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpInt64:
       {
-	ScalarColumn<Int64> ac(table_p,colName); 
+	ScalarColumn<Int64> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
-	}else{ 
+	}else{
 	  return ValueHolder (ac.getColumnRange(Slice(rownr, nrow, incr)));
 	}
       }
       break;
     case TpFloat:
       {
-	ScalarColumn<Float> ac(table_p,colName); 
+	ScalarColumn<Float> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2240,7 +2243,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpDouble:
       {
-	ScalarColumn<Double> ac(table_p,colName); 
+	ScalarColumn<Double> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2250,7 +2253,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpComplex:
       {
-	ScalarColumn<Complex> ac(table_p,colName); 
+	ScalarColumn<Complex> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2260,7 +2263,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpDComplex:
       {
-	ScalarColumn<DComplex> ac(table_p,colName); 
+	ScalarColumn<DComplex> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2270,7 +2273,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpString:
       {
-	ScalarColumn<String> ac(table_p,colName); 
+	ScalarColumn<String> ac(table_p,colName);
 	if (isCell) {
 	  return ValueHolder (ac(rownr));
 	}else{
@@ -2280,7 +2283,7 @@ ValueHolder TableProxy::getValueFromTable (const String& colName,
       break;
     case TpRecord:
       {
-	ScalarColumn<TableRecord> ac(table_p,colName); 
+	ScalarColumn<TableRecord> ac(table_p,colName);
 	if (isCell) {
 	  // Transform a TableRecord into a Record.
 	  return ValueHolder (ac(rownr).toRecord());
@@ -2862,7 +2865,7 @@ void TableProxy::putValueInTable (const String& colName,
   DataType type = table_p.tableDesc().columnDesc(colName).dataType();
   if (isScalar) {
     switch (type) {
-    case TpBool: 
+    case TpBool:
       {
 	ScalarColumn<Bool> col(table_p, colName);
 	if (isCell) {
@@ -3403,10 +3406,12 @@ TableLock TableProxy::makeLockOptions (const Record& options)
     opt = TableLock::PermanentLocking;
   } else if (str == "permanentwait") {
     opt = TableLock::PermanentLockingWait;
+  } else if (str == "nolock") {
+    opt = TableLock::NoLocking;
   } else {
     throw TableError ("'" + str + "' is an unknown lock option; valid are "
 		      "default,auto,autonoread,user,usernoread,permanent,"
-		      "permanentwait");
+		      "permanentwait,lock");
   }
   if (options.nfields() == 1) {
     return TableLock(opt);
